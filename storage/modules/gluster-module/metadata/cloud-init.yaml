#cloud-config
package_update: false
package_upgrade: false
#ssh_pwauth: no
packages:
  - glusterfs-server
users:
  - name: storage
    groups: sudo
    shell: /bin/bash
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    ssh-authorized-keys:
      - ${master_pubkey}
      - ${local_pubkey}
  - name: root
    groups: sudo
    shell: /bin/bash
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    ssh-authorized-keys:
      - ${master_pubkey}
      - ${local_pubkey}

write_files:
  - content: |
%{ for line in master_privkey ~}
      ${line}
%{ endfor ~}
    path: /root/.ssh/id_ed25519
    permissions: "0400"
    owner: root:root

apt:
  conf: |
    Acquire::Retries "100";
    DPkg::Lock::Timeout "300";

runcmd:
  - systemctl disable unattended-upgrades.service
  - systemctl disable apt-daily.timer
  - systemctl disable apt-daily-upgrade.timer
  - sudo systemctl stop unattended-upgrades
  - sudo apt-get update
  - while fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done; apt-get install -o Dpkg::Lock::Timeout=300 -o Acquire::Retries=100 -y glusterfs-server
%{ for x in range(1, disk_count + 1) ~}
  - echo "This is disk number ${x}, device is vd${index_to_letter[x]}"
  - mkfs.xfs -f -i size=512 /dev/vd${index_to_letter[x]}
  - mkdir -p /bricks/brick${x}
  - [ sh, -c, "echo '/dev/vd${index_to_letter[x]} /bricks/brick${x} xfs defaults 1 2' >> /etc/fstab" ]
%{ endfor ~}
  - mount -a
  - systemctl enable glusterd
  - for r in $(seq 1 10); do systemctl start glusterd && break || sleep 5; done
  - |
    if [ "$(hostname)" = "gluster01" ]; then
      echo "GLUSTER peers initialization"
      result=""
      i=1
      while [ $i -le ${nodes_count} ]; do
        for r in $(seq 1 50); do gluster peer probe gluster$(printf "%02d" $i) && break || sleep 15; done
%{ for y in range(1, disk_count + 1) ~}
        result="gluster$(printf "%02d" $i):/bricks/brick${y}/vol0 $result"
%{ endfor ~} 
        i=$((i + 1))
      done
      echo "GLUSTER volume create for nodes: $result"
      for r in $(seq 1 30); do gluster volume create stripe-volume $(echo "$result" | sed 's/ $//') && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume client.event-threads 24 && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume server.event-threads 24 && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume server.outstanding-rpc-limit 128 && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume server.allow-insecure on && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume features.cache-invalidation on && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume features.cache-invalidation-timeout 600 && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.qr-cache-timeout 600 && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.read-ahead-page-count 16 && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.client-io-threads on && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.quick-read off && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.parallel-readdir on && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.io-thread-count 64 && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.cache-size 8GB && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.cache-invalidation on && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.stat-prefetch on && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.parallel-readdir on && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume performance.nl-cache-positive-entry on && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume set stripe-volume cluster.lookup-optimize on && break || sleep 10; done
      for r in $(seq 1 30); do gluster volume start stripe-volume && break || sleep 10; done
    fi
  - gluster volume status
  - echo "GLUSTER initialisation DONE"
